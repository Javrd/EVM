DROP TABLE LOGIN;
DROP TABLE PERTENECE_A;
DROP TABLE ASIGNATURAS;
DROP TABLE PRESTAMOS;
DROP TABLE INSTRUMENTOS;
DROP TABLE PAGOS;
DROP TABLE FALTAS;
DROP TABLE MATRICULAS;
DROP TABLE RELACIONES;
DROP TABLE RESPONSABLES;
DROP TABLE USUARIOS;

CREATE TABLE USUARIOS
	(
	OID_U NUMBER(3),
	NOMBRE VARCHAR2(50) NOT NULL,
	APELLIDOS VARCHAR2(50) NOT NULL,
	FECHA_NACIMIENTO DATE NOT NULL,
	DIRECCION VARCHAR2(60) NOT NULL,
	EMAIL VARCHAR2(60),
	TELEFONO NUMBER(9),
	DERECHOS_IMAGEN NUMBER(1) CHECK(DERECHOS_IMAGEN=1 OR DERECHOS_IMAGEN=0) NOT NULL,
	PRIMARY KEY (OID_U)
	);



CREATE TABLE RESPONSABLES
	(
	OID_R NUMBER(3),
	NOMBRE VARCHAR2(50) NOT NULL,
	APELLIDOS VARCHAR2(50) NOT NULL,	
	EMAIL VARCHAR2(60),
  TELEFONO NUMBER(9) NOT NULL,
	PRIMARY KEY (OID_R)
	);


CREATE TABLE RELACIONES
	(
	OID_REL NUMBER(3),
	OID_U NUMBER(3),
	OID_R NUMBER(3),
	TIPO_RELACION VARCHAR2(60) NOT NULL,
	PRIMARY KEY (OID_REL),
	FOREIGN KEY (OID_U) REFERENCES USUARIOS,
	FOREIGN KEY (OID_R) REFERENCES RESPONSABLES
	);
	

CREATE TABLE MATRICULAS
	(
	OID_M NUMBER(3),
	FECHA_MATRICULACION DATE,
	CURSO INT NOT NULL,
	CODIGO VARCHAR2(5) NOT NULL,
	OID_U NUMBER(3),
	PRIMARY KEY (OID_M),
	FOREIGN KEY (OID_U) REFERENCES USUARIOS
	);


CREATE TABLE FALTAS
	(
	OID_F NUMBER(3),
	TIPO_FALTA VARCHAR2(10) CHECK(TIPO_FALTA='Pago' OR TIPO_FALTA='Asistencia'),
	FECHA_FALTA DATE,
	JUSTIFICADA NUMBER(1) CHECK(JUSTIFICADA=0 OR JUSTIFICADA=1),
	OID_M NUMBER(3),
	PRIMARY KEY (OID_F),
	FOREIGN KEY (OID_M) REFERENCES MATRICULAS
	);


CREATE TABLE PAGOS
	(
	OID_PA NUMBER(4),
	FECHA_PAGO DATE,
	CANTIDAD NUMBER(10) NOT NULL,
	CONCEPTO CHAR(10) NOT NULL,
	ESTADO VARCHAR2(9) CHECK(ESTADO='Pagado' OR Estado='Pendiente'),
	OID_M NUMBER(3),
	PRIMARY KEY (OID_PA),
	FOREIGN KEY (OID_M) REFERENCES MATRICULAS
	);


CREATE TABLE INSTRUMENTOS
	(
	OID_I NUMBER(3), 
	TIPO VARCHAR2(50),
	LIBRE NUMBER(1) CHECK(LIBRE=1 OR LIBRE=0),
	NOMBRE VARCHAR2(50),
	ESTADO_INSTRUMENTO VARCHAR2(11) CHECK(ESTADO_INSTRUMENTO='Nuevo' OR ESTADO_INSTRUMENTO='Usado' OR ESTADO_INSTRUMENTO='Deteriorado'),
	PRIMARY KEY (OID_I)
	);


CREATE TABLE PRESTAMOS
	(
	OID_P NUMBER(3), 
	FECHA_PRESTAMO DATE,
	OID_M NUMBER(3),
	OID_I NUMBER(3),
	PRIMARY KEY (OID_P),
	FOREIGN KEY (OID_M) REFERENCES MATRICULAS,
	FOREIGN KEY (OID_I) REFERENCES INSTRUMENTOS
	);


CREATE TABLE ASIGNATURAS
	(
	OID_A NUMBER(3), 
	NOMBRE VARCHAR2(60) NOT NULL,
	PRIMARY KEY (OID_A)
	);


CREATE TABLE PERTENECE_A
	(
	OID_PE NUMBER(5),
	OID_M NUMBER(3),
	OID_A NUMBER(3), 
	PRIMARY KEY (OID_PE),
	FOREIGN KEY (OID_M) REFERENCES MATRICULAS,
	FOREIGN KEY (OID_A) REFERENCES ASIGNATURAS
	);

CREATE TABLE LOGIN
	(
	OID_L NUMBER(3), 
	USER VARCHAR2(10) NOT NULL,
	PASSWORD VARCHAR2(10) NOT NULL,
	PRIMARY KEY (OID_L)
	);

DROP SEQUENCE SEC_L;
CREATE SEQUENCE SEC_L INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_L
BEFORE INSERT ON LOGIN
FOR EACH ROW
BEGIN
SELECT SEC_L.NEXTVAL INTO :NEW.OID_L FROM DUAL;
END;
/
DROP SEQUENCE SEC_U;
CREATE SEQUENCE SEC_U INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_U
BEFORE INSERT ON USUARIOS
FOR EACH ROW
BEGIN
SELECT SEC_U.NEXTVAL INTO :NEW.OID_U FROM DUAL;
END;
/
DROP SEQUENCE SEC_R;
CREATE SEQUENCE SEC_R INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_R
BEFORE INSERT ON RESPONSABLES
FOR EACH ROW
BEGIN
SELECT SEC_R.NEXTVAL INTO :NEW.OID_R FROM DUAL;
END;
/
DROP SEQUENCE SEC_REL;
CREATE SEQUENCE SEC_REL INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_REL
BEFORE INSERT ON RELACIONES
FOR EACH ROW
BEGIN
SELECT SEC_REL.NEXTVAL INTO :NEW.OID_REL FROM DUAL;
END;
/
DROP SEQUENCE SEC_M;
CREATE SEQUENCE SEC_M INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_M
BEFORE INSERT ON MATRICULAS
FOR EACH ROW
BEGIN
SELECT SEC_M.NEXTVAL INTO :NEW.OID_M FROM DUAL;
END;
/
DROP SEQUENCE SEC_F;
CREATE SEQUENCE SEC_F INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_F
BEFORE INSERT ON FALTAS
FOR EACH ROW
BEGIN
SELECT SEC_F.NEXTVAL INTO :NEW.OID_F FROM DUAL;
END;
/
DROP SEQUENCE SEC_PA;
CREATE SEQUENCE SEC_PA INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_PA
BEFORE INSERT ON PAGOS
FOR EACH ROW
BEGIN
SELECT SEC_PA.NEXTVAL INTO :NEW.OID_PA FROM DUAL;
END;
/
DROP SEQUENCE SEC_I;
CREATE SEQUENCE SEC_I INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_I
BEFORE INSERT ON INSTRUMENTOS
FOR EACH ROW
BEGIN
SELECT SEC_I.NEXTVAL INTO :NEW.OID_I FROM DUAL;
END;
/
DROP SEQUENCE SEC_P;
CREATE SEQUENCE SEC_P INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_P
BEFORE INSERT ON PRESTAMOS
FOR EACH ROW
BEGIN
SELECT SEC_P.NEXTVAL INTO :NEW.OID_P FROM DUAL;
END;
/
DROP SEQUENCE SEC_A;
CREATE SEQUENCE SEC_A INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_A
BEFORE INSERT ON ASIGNATURAS
FOR EACH ROW
BEGIN
SELECT SEC_A.NEXTVAL INTO :NEW.OID_A FROM DUAL;
END;
/
DROP SEQUENCE SEC_PE;
CREATE SEQUENCE SEC_PE INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER TRI_PE
BEFORE INSERT ON PERTENECE_A
FOR EACH ROW
BEGIN
SELECT SEC_PE.NEXTVAL INTO :NEW.OID_PE FROM DUAL;
END;
/



